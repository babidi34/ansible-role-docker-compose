---
- name: Ensure deployment directory exists
  ansible.builtin.file:
    path: "{{ deploy_docker_compose_directory }}"
    state: directory
    owner: "{{ deploy_docker_compose_owner }}"
    group: "{{ deploy_docker_compose_group }}"
    mode: "0755"

- name: Install Git if deploy_docker_compose_git_repo_url is provided
  ansible.builtin.package:
    name: 
      - git
      - python3-docker
    state: present
  when: deploy_docker_compose_git_repo_url | length > 0

- name: Deploy SSH private key for repo git
  ansible.builtin.copy:
    content: "{{ deploy_docker_compose_git_ssh_key_content }}"
    dest: "{{ deploy_docker_compose_git_ssh_key }}"
    owner: root
    group: root
    mode: '0600'
  when: deploy_docker_compose_git_ssh_key_content | length > 0

- name: Clone Git repository if deploy_docker_compose_git_repo_url is provided
  ansible.builtin.git:
    repo: "{{ deploy_docker_compose_git_repo_url }}"
    dest: "{{ deploy_docker_compose_directory }}"
    version: "{{ deploy_docker_compose_git_repo_branch | default(omit) }}"
    key_file: "{{ deploy_docker_compose_git_ssh_key | default(omit) }}"
    accept_newhostkey: true
    clone: yes
    update: yes
    force: true
  when: deploy_docker_compose_git_repo_url | length > 0

- name: Create .env file
  ansible.builtin.file:
    state: touch
    path: "{{ deploy_docker_compose_directory }}/.env"
    owner: "{{ deploy_docker_compose_owner }}"
    group: "{{ deploy_docker_compose_group }}"
    mode: '640'

- name: add vars in .env file
  lineinfile:
    path: "{{ deploy_docker_compose_directory }}/.env"
    line: "{{ item.key }}={{ item.value }}"
    insertafter: EOF
  with_dict: "{{ deploy_docker_compose_env_vars }}"

- name: Build Docker images from Dockerfiles
  ansible.builtin.command:
    cmd: >
      docker build
      -f {{ item.context | default(deploy_docker_compose_directory) }}/{{ item.dockerfile }}
      {% for tag in item.tags %}
      -t {{ item.image_name }}:{{ tag }} 
      {% endfor %}
      {% for arg_key, arg_val in item.build_args.items() %}
      --build-arg {{ arg_key }}={{ arg_val }}
      {% endfor %}
      {{ item.context | default(deploy_docker_compose_directory) }}
  loop: "{{ deploy_docker_compose_dockerfile }}"
  when: deploy_docker_compose_dockerfile | length > 0


- name: Start Docker Compose services
  ansible.builtin.command:
    cmd: docker-compose up -d
    chdir: "{{ deploy_docker_compose_directory }}"
